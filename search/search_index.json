{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NPM GROOVY LINT (+ Format & Auto-fix) Groovy & Jenkinsfile Linter, Formatter and Auto-fixer New: The article about the story of npm-groovy-lint , and why you should dive in open-source community ! Based on CodeNarc , this out of the box package allows to track groovy errors and correct a part of them Use option --format to format & prettify source code Use option --fix to activate autofixing of fixable rules Easy to integrate in a CD/CI process (Jenkins Pipeline,CircleCI...) to lint your groovy or Jenkinsfile at each build :) You can also use this package in : Visual Studio Code Groovy Lint extension Mega-Linter (can be used as GitHub Action, and lints all other languages and formats) Docker Image See CHANGELOG Any question , problem or enhancement request ? Ask here :) Usage npm-groovy-lint OPTIONS Parameter Type Description -p --path String Directory containing the files to lint Example: ./path/to/my/groovy/files -f --files String Comma-separated list of Ant-style file patterns specifying files that must be included. Default: \"**/*.groovy,**/Jenkinsfile,**/*.gradle\" Examples: - \"**/Jenkinsfile\" - \"**/*.groovy\" - \"**/*.gradle\" - \"**/mySingleFile.groovy\" -o --output String Output format (txt,json,html,xml), or path to a file with one of these extensions Default: txt Examples: - \"txt\" - \"json\" - \"./logs/myLintResults.txt\" - \"./logs/myLintResults.json\" - \"./logs/myLintResults.html\" - \"./logs/myLintResults.xml\" -l --loglevel String Log level (error,warning or info) Default: info --failon String Defines the error level where CLI will fail (return code = 1). error,warning,info or none. Each failure level includes the more critical ones. -c --config String Custom path to GroovyLint config file , or preset config recommended|recommended-jenkinsfile|all Default: Browse current directory to find .groovylintrc.json|js|yml|package.json config file, or default npm-groovy-lint config if not defined. Note: command-line arguments have priority on config file properties --parse Boolean Try to compile the source code and return parse errors (since v5.7.0, default to true, use --no-parse to deactivate) --format Boolean Format source code --fix Boolean Automatically fix problems when possible See Autofixable rules -x --fixrules String Option for --fix argument: List of rule identifiers to fix (if not specified, all available fixes will be applied). See Autofixable rules Examples: - \"SpaceBeforeClosingBrace,SpaceAfterClosingBrace,UnusedImport\" - \"Indentation\" --nolintafter Boolean When format or fix is called, a new lint is performed after the fixes to update the returned error list. If you just want the updated source code and do not care about the error logs, use this parameter to improve performances -r --rulesets String RuleSet file(s) to use for linting, if you do not want to use recommended rules or .groovylintrc.js defined rules. If list of comma separated strings corresponding to CodeNarc rules, a RuleSet file will be dynamically generated Examples: - \"./config/codenarc/RuleSet-Custom.groovy\" - \"./path/to/my/ruleset/files\" - Indentation{\"spacesPerIndentLevel\":2,\"severity\":\"warning\"},UnnecessarySemicolon,UnnecessaryGString --rulesetsoverridetype String If list of rules sent in rulesets option, defines if they replace rules defined in .groovylintrc.json, or if they are appended Values: replaceConfig (default), appendConfig -s --source String If path and files are not set, you can directly send the source code string to analyze --verbose Boolean More outputs in console, including performed fixes -i --ignorepattern String Comma-separated list of Ant-style file patterns specifying files that must be ignored Default: none Example: \"**/test/*\"\" --noserver Boolean npm-groovy-lint launches a microservice to avoid performance issues caused by loading java/groovy each time,that auto kills itself after 1h idle. Use this argument if you do not want to use this feature --returnrules Boolean Return rules descriptions and URL if set --javaexecutable String Override java executable to use Default: java Example: C:\\Program Files\\Java\\jdk1.8.0_144\\bin\\java.exe --javaoptions String Override java options to use Default: \"-Xms256m,-Xmx2048m\" --no-insight Boolean npm-groovy-lint collects anonymous usage statistics using amplitude , in order to make new improvements based on how users use this package. Summary charts are available at https://tinyurl.com/groovy-stats . Analytics obviously does not receive sensitive information like your code, as you can see in analytics.js . If you want to disable anonymous usage statistics, use --no-insight option. --codenarcargs String Use core CodeNarc arguments (all npm-groovy-lint arguments will be ignored) Doc: http://codenarc.github.io/CodeNarc/codenarc-command-line.html Example: npm-groovy-lint --codenarcargs -basedir=\"lib/example\" -rulesetfiles=\"file:lib/example/RuleSet-Groovy.groovy\" -maxPriority1Violations=0 -report=\"xml:ReportTestCodenarc.xml -h --help Boolean Show help (npm-groovy-lint -h OPTIONNAME to see option detail with examples) -v --version Boolean Show npm-groovy-lint version (with CodeNarc version) Installation npm install -g npm-groovy-lint If you have issues with v9, install previous version with npm install -g npm-groovy-lint@8.2.0 Node.js >= 12 is required to run this package. If you can't upgrade, you can use nvm to have different node versions on your computer If you do not have java (from 8 to 14) installed on your computer npm-groovy-lint will install them for you, so the first run may be long. Configuration Default rules definition ( recommended , based on all tracks a lot of errors, do not hesitate to ignore some of them (like NoDef ou RequiredVariableType) if they are too mean for your project. Create a file named .groovylintrc.json in the current or any parent directory of where your files to analyze are located your-repo-root-folder src groovy mygroovyfile.groovy Jenkinsfile .groovylintrc.json (do not forget the dot at the beginning of the file name) If you are using VsCode Groovy Lint extension , just use QuickFix Ignore in all files and it will generate groovylintrc.json file Format extends : Name of a base configuration ( recommended , recommended-jenkinsfile , all ) rules : List of rules definition, following format \"RuleSection.RuleName\": ruleParameters or \"RuleName\": ruleParameters RuleName : any of the CodeNarc rules ruleParameters : can be just a severity override ( \"off\" , \"error\" , \"warning\" , \"info\" ) , or a property list : severity : off,error,warning,info enabled : true (default) or false any of the rule advanced properties OR codenarcRulesets : Comma-separated string containing the list of .xml or .groovy CodeNarc RuleSet files (in case you already are a CodeNarc user and do not wish to switch to npm-groovy-lint config format) Examples { \"extends\": \"recommended\", \"rules\": { \"comments.ClassJavadoc\": \"off\", \"formatting.Indentation\": { \"spacesPerIndentLevel\": 4, \"severity\": \"info\" }, \"UnnecessaryReturnKeyword\": \"error\" } } { \"extends\": \"recommended-jenkinsfile\", \"rules\": { \"CouldBeElvis\": \"off\", \"CouldBeSwitchStatement\": \"off\", \"VariableName\": { \"severity\": \"info\" } } } { \"codenarcRulesets\": \"RuleSet-1.groovy,RuleSet-2.groovy\" } Example calls Lint groovy with JSON output npm-groovy-lint --output json Advanced config npm-groovy-lint --path \"./path/to/my/groovy/files\" --files \"**/*.groovy\" --config \"./config/codenarc/.groovylintrcCustom.js\" --loglevel warning --output txt Lint using core CodeNarc parameters and generate HTML report file npm-groovy-lint --codenarcargs -basedir=\"lib/example\" -rulesetfiles=\"file:lib/example/RuleSet-Groovy.groovy\" -title=\"TestTitleCodenarc\" -maxPriority1Violations=0' -report=\"html:ReportTestCodenarc.html\" Disabling rules in source You can disable rules directly by adding comment in file, using eslint style To temporarily disable rule warnings in your file, use block comments in the following format: /* groovylint-disable */ def variable = 1; /* groovylint-enable */ You can also disable or enable warnings for specific rules: /* groovylint-disable NoDef, UnnecessarySemicolon */ def variable = 1; /* groovylint-enable NoDef, UnnecessarySemicolon */ To disable rule warnings in an entire file, put a /* groovylint-disable */ block comment at the top of the file: /* groovylint-disable */ def variable = 1; You can also disable or enable specific rules for an entire file: /* groovylint-disable NoDef */ def variable = 1; To disable all rules on a specific line, use a line or block comment in one of the following formats: def variable = 1; // groovylint-disable-line // groovylint-disable-next-line def variable = 1; /* groovylint-disable-next-line */ def variable = 1; def variable = 1; /* groovylint-disable-line */ To disable a specific rule on a specific line: def variable = 1; // groovylint-disable-line NoDef // groovylint-disable-next-line NoDef def variable = 1; def variable = 1; /* groovylint-disable-line NoDef */ /* groovylint-disable-next-line NoDef */ def variable = 1; To disable multiple rules on a specific line: def variable = 1; // groovylint-disable-line NoDef, UnnecessarySemicolon // groovylint-disable-next-line NoDef, UnnecessarySemicolon def variable = 1; def variable = 1; /* groovylint-disable-line NoDef, UnnecessarySemicolon */ /* groovylint-disable-next-line NoDef, UnnecessarySemicolon */ def variable = 1; Auto-Fixable rules AssignmentInConditional BlankLineBeforePackage BlockEndsWithBlankLine BlockStartsWithBlankLine BracesForClass BracesForForLoop BracesForIfElse BracesForMethod BracesForTryCatchFinally ClassEndsWithBlankLine ClassStartsWithBlankLine ClosingBraceNotAlone ConsecutiveBlankLines DuplicateImport ElseBlockBraces ExplicitArrayListInstantiation ExplicitLinkedListInstantiation FileEndsWithoutNewline IfStatementBraces Indentation IndentationClosingBraces IndentationComments InsecureRandom MisorderedStaticImports MissingBlankLineAfterImports MissingBlankLineAfterPackage NoTabCharacter SpaceAfterCatch SpaceAfterComma SpaceAfterFor SpaceAfterIf SpaceAfterOpeningBrace SpaceAfterSemicolon SpaceAfterSwitch SpaceAfterWhile SpaceAroundOperator SpaceBeforeClosingBrace SpaceBeforeOpeningBrace TrailingWhitespace UnnecessaryDefInFieldDeclaration UnnecessaryDefInMethodDeclaration UnnecessaryDefInVariableDeclaration UnnecessaryDotClass UnnecessaryFinalOnPrivateMethod UnnecessaryGString UnnecessaryGroovyImport UnnecessaryPackageReference UnnecessaryParenthesesForMethodCallWithClosure UnnecessarySemicolon UnnecessaryToString UnusedImport Contribute to add more rules fixes :) CD/CI Mega-Linter Latest npm-groovy-lint version is natively integrated in Mega-Linter , that you can use as GitHub action or in other CI tools This tool can also automatically apply fixes on Pull Request branches CircleCI # .circleci/config.yml version: 2.1 jobs: lint: docker: - image: nvuillam/npm-groovy-lint steps: - checkout - run: | npm-groovy-lint workflows: version: 2 \"lint\": jobs: - lint Jenkins node { checkout scm docker.image('nvuillam/npm-groovy-lint').inside { sh 'npm-groovy-lint' } } Shell Run with default settings docker run --rm -u \"$(id -u):$(id -g)\" -w=/tmp -v \"$PWD\":/tmp nvuillam/npm-groovy-lint Run with additional flags by simply appending them at after docker image name: docker run --rm -u \"$(id -u):$(id -g)\" -w=/tmp -v \"$PWD\":/tmp nvuillam/npm-groovy-lint --failon warning --verbose Other You can run npm-groovy-lint using its official docker image Use as module You can import npm-groovy-lint into your NPM package and call lint & fix via module, using the same options than from npm-groovy-lint command line Example npm install npm-groovy-lint --save const NpmGroovyLint = require(\"npm-groovy-lint/lib/groovy-lint.js\"); const fse = require(\"fs-extra\"); const npmGroovyLintConfig = { source: fse.readFileSync('./lib/example/SampleFile.groovy').toString(), fix: true, loglevel: 'warning', output: 'none' }; const linter = new NpmGroovyLint(npmGroovyLintConfig, {}); await linter.run(); console.log(JSON.stringify(linter.lintResult)); Contribute Contributions are very welcome ! Please follow Contribution instructions Thanks Other packages used CodeNarc : groovy lint java-caller : Easy call Java commands from Node slf4j : logging for CodeNarc log4j : logging for CodeNarc GMetrics : Code measures for CodeNarc Inspiration from eslint about configuration and run patterns Contributors Nicolas Vuillamy Dave Gallant Howard Lo Pawel Kopka docwhat CatSue Release notes See complete CHANGELOG","title":"Home"},{"location":"#npm-groovy-lint-format-auto-fix","text":"","title":"NPM GROOVY LINT (+ Format &amp; Auto-fix)"},{"location":"#groovy-jenkinsfile-linter-formatter-and-auto-fixer","text":"New: The article about the story of npm-groovy-lint , and why you should dive in open-source community ! Based on CodeNarc , this out of the box package allows to track groovy errors and correct a part of them Use option --format to format & prettify source code Use option --fix to activate autofixing of fixable rules Easy to integrate in a CD/CI process (Jenkins Pipeline,CircleCI...) to lint your groovy or Jenkinsfile at each build :) You can also use this package in : Visual Studio Code Groovy Lint extension Mega-Linter (can be used as GitHub Action, and lints all other languages and formats) Docker Image See CHANGELOG Any question , problem or enhancement request ? Ask here :)","title":"Groovy &amp; Jenkinsfile Linter, Formatter and Auto-fixer"},{"location":"#usage","text":"npm-groovy-lint OPTIONS Parameter Type Description -p --path String Directory containing the files to lint Example: ./path/to/my/groovy/files -f --files String Comma-separated list of Ant-style file patterns specifying files that must be included. Default: \"**/*.groovy,**/Jenkinsfile,**/*.gradle\" Examples: - \"**/Jenkinsfile\" - \"**/*.groovy\" - \"**/*.gradle\" - \"**/mySingleFile.groovy\" -o --output String Output format (txt,json,html,xml), or path to a file with one of these extensions Default: txt Examples: - \"txt\" - \"json\" - \"./logs/myLintResults.txt\" - \"./logs/myLintResults.json\" - \"./logs/myLintResults.html\" - \"./logs/myLintResults.xml\" -l --loglevel String Log level (error,warning or info) Default: info --failon String Defines the error level where CLI will fail (return code = 1). error,warning,info or none. Each failure level includes the more critical ones. -c --config String Custom path to GroovyLint config file , or preset config recommended|recommended-jenkinsfile|all Default: Browse current directory to find .groovylintrc.json|js|yml|package.json config file, or default npm-groovy-lint config if not defined. Note: command-line arguments have priority on config file properties --parse Boolean Try to compile the source code and return parse errors (since v5.7.0, default to true, use --no-parse to deactivate) --format Boolean Format source code --fix Boolean Automatically fix problems when possible See Autofixable rules -x --fixrules String Option for --fix argument: List of rule identifiers to fix (if not specified, all available fixes will be applied). See Autofixable rules Examples: - \"SpaceBeforeClosingBrace,SpaceAfterClosingBrace,UnusedImport\" - \"Indentation\" --nolintafter Boolean When format or fix is called, a new lint is performed after the fixes to update the returned error list. If you just want the updated source code and do not care about the error logs, use this parameter to improve performances -r --rulesets String RuleSet file(s) to use for linting, if you do not want to use recommended rules or .groovylintrc.js defined rules. If list of comma separated strings corresponding to CodeNarc rules, a RuleSet file will be dynamically generated Examples: - \"./config/codenarc/RuleSet-Custom.groovy\" - \"./path/to/my/ruleset/files\" - Indentation{\"spacesPerIndentLevel\":2,\"severity\":\"warning\"},UnnecessarySemicolon,UnnecessaryGString --rulesetsoverridetype String If list of rules sent in rulesets option, defines if they replace rules defined in .groovylintrc.json, or if they are appended Values: replaceConfig (default), appendConfig -s --source String If path and files are not set, you can directly send the source code string to analyze --verbose Boolean More outputs in console, including performed fixes -i --ignorepattern String Comma-separated list of Ant-style file patterns specifying files that must be ignored Default: none Example: \"**/test/*\"\" --noserver Boolean npm-groovy-lint launches a microservice to avoid performance issues caused by loading java/groovy each time,that auto kills itself after 1h idle. Use this argument if you do not want to use this feature --returnrules Boolean Return rules descriptions and URL if set --javaexecutable String Override java executable to use Default: java Example: C:\\Program Files\\Java\\jdk1.8.0_144\\bin\\java.exe --javaoptions String Override java options to use Default: \"-Xms256m,-Xmx2048m\" --no-insight Boolean npm-groovy-lint collects anonymous usage statistics using amplitude , in order to make new improvements based on how users use this package. Summary charts are available at https://tinyurl.com/groovy-stats . Analytics obviously does not receive sensitive information like your code, as you can see in analytics.js . If you want to disable anonymous usage statistics, use --no-insight option. --codenarcargs String Use core CodeNarc arguments (all npm-groovy-lint arguments will be ignored) Doc: http://codenarc.github.io/CodeNarc/codenarc-command-line.html Example: npm-groovy-lint --codenarcargs -basedir=\"lib/example\" -rulesetfiles=\"file:lib/example/RuleSet-Groovy.groovy\" -maxPriority1Violations=0 -report=\"xml:ReportTestCodenarc.xml -h --help Boolean Show help (npm-groovy-lint -h OPTIONNAME to see option detail with examples) -v --version Boolean Show npm-groovy-lint version (with CodeNarc version)","title":"Usage"},{"location":"#installation","text":"npm install -g npm-groovy-lint If you have issues with v9, install previous version with npm install -g npm-groovy-lint@8.2.0 Node.js >= 12 is required to run this package. If you can't upgrade, you can use nvm to have different node versions on your computer If you do not have java (from 8 to 14) installed on your computer npm-groovy-lint will install them for you, so the first run may be long.","title":"Installation"},{"location":"#configuration","text":"Default rules definition ( recommended , based on all tracks a lot of errors, do not hesitate to ignore some of them (like NoDef ou RequiredVariableType) if they are too mean for your project. Create a file named .groovylintrc.json in the current or any parent directory of where your files to analyze are located your-repo-root-folder src groovy mygroovyfile.groovy Jenkinsfile .groovylintrc.json (do not forget the dot at the beginning of the file name) If you are using VsCode Groovy Lint extension , just use QuickFix Ignore in all files and it will generate groovylintrc.json file","title":"Configuration"},{"location":"#format","text":"extends : Name of a base configuration ( recommended , recommended-jenkinsfile , all ) rules : List of rules definition, following format \"RuleSection.RuleName\": ruleParameters or \"RuleName\": ruleParameters RuleName : any of the CodeNarc rules ruleParameters : can be just a severity override ( \"off\" , \"error\" , \"warning\" , \"info\" ) , or a property list : severity : off,error,warning,info enabled : true (default) or false any of the rule advanced properties OR codenarcRulesets : Comma-separated string containing the list of .xml or .groovy CodeNarc RuleSet files (in case you already are a CodeNarc user and do not wish to switch to npm-groovy-lint config format)","title":"Format"},{"location":"#examples","text":"{ \"extends\": \"recommended\", \"rules\": { \"comments.ClassJavadoc\": \"off\", \"formatting.Indentation\": { \"spacesPerIndentLevel\": 4, \"severity\": \"info\" }, \"UnnecessaryReturnKeyword\": \"error\" } } { \"extends\": \"recommended-jenkinsfile\", \"rules\": { \"CouldBeElvis\": \"off\", \"CouldBeSwitchStatement\": \"off\", \"VariableName\": { \"severity\": \"info\" } } } { \"codenarcRulesets\": \"RuleSet-1.groovy,RuleSet-2.groovy\" }","title":"Examples"},{"location":"#example-calls","text":"Lint groovy with JSON output npm-groovy-lint --output json Advanced config npm-groovy-lint --path \"./path/to/my/groovy/files\" --files \"**/*.groovy\" --config \"./config/codenarc/.groovylintrcCustom.js\" --loglevel warning --output txt Lint using core CodeNarc parameters and generate HTML report file npm-groovy-lint --codenarcargs -basedir=\"lib/example\" -rulesetfiles=\"file:lib/example/RuleSet-Groovy.groovy\" -title=\"TestTitleCodenarc\" -maxPriority1Violations=0' -report=\"html:ReportTestCodenarc.html\"","title":"Example calls"},{"location":"#disabling-rules-in-source","text":"You can disable rules directly by adding comment in file, using eslint style To temporarily disable rule warnings in your file, use block comments in the following format: /* groovylint-disable */ def variable = 1; /* groovylint-enable */ You can also disable or enable warnings for specific rules: /* groovylint-disable NoDef, UnnecessarySemicolon */ def variable = 1; /* groovylint-enable NoDef, UnnecessarySemicolon */ To disable rule warnings in an entire file, put a /* groovylint-disable */ block comment at the top of the file: /* groovylint-disable */ def variable = 1; You can also disable or enable specific rules for an entire file: /* groovylint-disable NoDef */ def variable = 1; To disable all rules on a specific line, use a line or block comment in one of the following formats: def variable = 1; // groovylint-disable-line // groovylint-disable-next-line def variable = 1; /* groovylint-disable-next-line */ def variable = 1; def variable = 1; /* groovylint-disable-line */ To disable a specific rule on a specific line: def variable = 1; // groovylint-disable-line NoDef // groovylint-disable-next-line NoDef def variable = 1; def variable = 1; /* groovylint-disable-line NoDef */ /* groovylint-disable-next-line NoDef */ def variable = 1; To disable multiple rules on a specific line: def variable = 1; // groovylint-disable-line NoDef, UnnecessarySemicolon // groovylint-disable-next-line NoDef, UnnecessarySemicolon def variable = 1; def variable = 1; /* groovylint-disable-line NoDef, UnnecessarySemicolon */ /* groovylint-disable-next-line NoDef, UnnecessarySemicolon */ def variable = 1;","title":"Disabling rules in source"},{"location":"#auto-fixable-rules","text":"AssignmentInConditional BlankLineBeforePackage BlockEndsWithBlankLine BlockStartsWithBlankLine BracesForClass BracesForForLoop BracesForIfElse BracesForMethod BracesForTryCatchFinally ClassEndsWithBlankLine ClassStartsWithBlankLine ClosingBraceNotAlone ConsecutiveBlankLines DuplicateImport ElseBlockBraces ExplicitArrayListInstantiation ExplicitLinkedListInstantiation FileEndsWithoutNewline IfStatementBraces Indentation IndentationClosingBraces IndentationComments InsecureRandom MisorderedStaticImports MissingBlankLineAfterImports MissingBlankLineAfterPackage NoTabCharacter SpaceAfterCatch SpaceAfterComma SpaceAfterFor SpaceAfterIf SpaceAfterOpeningBrace SpaceAfterSemicolon SpaceAfterSwitch SpaceAfterWhile SpaceAroundOperator SpaceBeforeClosingBrace SpaceBeforeOpeningBrace TrailingWhitespace UnnecessaryDefInFieldDeclaration UnnecessaryDefInMethodDeclaration UnnecessaryDefInVariableDeclaration UnnecessaryDotClass UnnecessaryFinalOnPrivateMethod UnnecessaryGString UnnecessaryGroovyImport UnnecessaryPackageReference UnnecessaryParenthesesForMethodCallWithClosure UnnecessarySemicolon UnnecessaryToString UnusedImport Contribute to add more rules fixes :)","title":"Auto-Fixable rules"},{"location":"#cdci","text":"","title":"CD/CI"},{"location":"#mega-linter","text":"Latest npm-groovy-lint version is natively integrated in Mega-Linter , that you can use as GitHub action or in other CI tools This tool can also automatically apply fixes on Pull Request branches","title":"Mega-Linter"},{"location":"#circleci","text":"# .circleci/config.yml version: 2.1 jobs: lint: docker: - image: nvuillam/npm-groovy-lint steps: - checkout - run: | npm-groovy-lint workflows: version: 2 \"lint\": jobs: - lint","title":"CircleCI"},{"location":"#jenkins","text":"node { checkout scm docker.image('nvuillam/npm-groovy-lint').inside { sh 'npm-groovy-lint' } }","title":"Jenkins"},{"location":"#shell","text":"Run with default settings docker run --rm -u \"$(id -u):$(id -g)\" -w=/tmp -v \"$PWD\":/tmp nvuillam/npm-groovy-lint Run with additional flags by simply appending them at after docker image name: docker run --rm -u \"$(id -u):$(id -g)\" -w=/tmp -v \"$PWD\":/tmp nvuillam/npm-groovy-lint --failon warning --verbose","title":"Shell"},{"location":"#other","text":"You can run npm-groovy-lint using its official docker image","title":"Other"},{"location":"#use-as-module","text":"You can import npm-groovy-lint into your NPM package and call lint & fix via module, using the same options than from npm-groovy-lint command line Example npm install npm-groovy-lint --save const NpmGroovyLint = require(\"npm-groovy-lint/lib/groovy-lint.js\"); const fse = require(\"fs-extra\"); const npmGroovyLintConfig = { source: fse.readFileSync('./lib/example/SampleFile.groovy').toString(), fix: true, loglevel: 'warning', output: 'none' }; const linter = new NpmGroovyLint(npmGroovyLintConfig, {}); await linter.run(); console.log(JSON.stringify(linter.lintResult));","title":"Use as module"},{"location":"#contribute","text":"Contributions are very welcome ! Please follow Contribution instructions","title":"Contribute"},{"location":"#thanks","text":"","title":"Thanks"},{"location":"#other-packages-used","text":"CodeNarc : groovy lint java-caller : Easy call Java commands from Node slf4j : logging for CodeNarc log4j : logging for CodeNarc GMetrics : Code measures for CodeNarc Inspiration from eslint about configuration and run patterns","title":"Other packages used"},{"location":"#contributors","text":"Nicolas Vuillamy Dave Gallant Howard Lo Pawel Kopka docwhat CatSue","title":"Contributors"},{"location":"#release-notes","text":"See complete CHANGELOG","title":"Release notes"},{"location":"CHANGELOG/","text":"Changelog UNRELEASED [9.2.0] 2021-12-23 Upgrade log4j dependencies because of (another) security issue (#196) [9.1.0] 2021-12-14 Upgrade log4j dependencies because of security issue (#194) [9.0.0] 2021-09-30 Upgrade to CodeNarc v2.2.0 Upgrade to Groovy v3.0.9 Reorganize sources test folder Use java from 8 to 14 (install it if a later version is found) Add timeouts in CI jobs Add colors in error logs [8.2.0] 2021-06-11 Upgrade dependencies advised by dependabot Fix Mega-Linter errors found [8.1.0] 2020-12-14 Exclude UnnecessaryGetter , FactoryMethodName , MethodReturnTypeRequired , and GStringExpressionWithinString in recommended-jenkinsfile ( #140 ) ( Felipe Santos ) [8.0.2] 2020-11-26 Fix documentation about --verbose and --version options Use GitHub action to deploy to NPM [8.0.1] 2020-11-19 Add a test case where variable includes if in its name for fix of rule SpaceAfterIf ( Behl\u00fcl U\u00e7ar ) [8.0.0] 2020-11-15 Upgrade to CodeNarc 2.0.0 Upgrade jars Adapt Indentation rule to new behaviour Use codenarc --ruleset argument instead of temp ruleset file Replace super-linter by Mega-Linter Fixes (#127) Formatting breaks code, converting else if into elseif in some cases Apply formatting rules also for --fix mode Fix Markdown dead links CI Migrate from CircleCI to GitHub Actions: now tests are on Linux, Windows & MacOs Activate spelling linter of Mega-Linter (+ .cspell.json file) Add test cases for format and fix using CLI [7.6.2] 2020-09-09 Disable TrailingComma rule by default until crash is solved in CodeNarc ( #75@vscode-groovy-lint ) [7.6.0] 2020-09-08 Add GitHub Action GitHub Super-Linter to the repository Update Dockerfile to pass Docker lint rules [7.5.5] 2020-09-05 Upgrade java-caller to v2.2.3 Fix Java 8 detection ( #101 ) [7.5.4] 2020-09-04 Update frameworks detection [7.5.1] 2020-09-02 Fix (#96) --fix adds redundant space into ${VARIABLE} (SpaceBeforeOpeningBrace fix rule error) Fix grails framework detection Fix Groovy parsing parsing when multiple files Add .gvy and .nf in default browsed files extensions [7.5.0] 2020-09-02 Add anonymous framework usage stats for Groovy core Team [7.4.3] 2020-08-29 Upgrade java-caller to v2.2.0 Fix CLASSPATH on windows in case there are spaces in paths [7.4.2] 2020-08-26 Fix (#90) When log level is specified number of linted files appear to be off [7.4.1] 2020-08-23 (#88) Fix Docker image to allow to use extra parameters (by Howard Lo ) [7.4.0] 2020-08-17 (#87) update to openjdk 11 in official Docker image (by Pawel Kopka ) [7.3.1] 2020-08-16 Add number of lines & reorganize anonymous statistics Fix error type counters in anonymous statistics [7.3.0] 2020-08-15 Allow to link to CodeNarc RuleSet files from .groovylintrc.json , using property \"codenarcRulesets\" . Warning: doing so means that all other properties of config file will be ignored. [7.1.1] 2020-08-11 Upgrade java-caller to v2.0.0 [7.1.0] 2020-08-10 Externalize JavaCaller class into a separate package java-caller and use it [7.0.0] 2020-08-07 New default recommended rules (activate/deactivate/change severity) Allow to call --config recommended-jenkinsfile to use delivered .groovylintrc-recommended-jenkinsfile.json [6.1.1] 2020-08-04 Fix SpaceAfterComma auto-fixing rule [6.1.0] 2020-08-04 Java 14 compatibility (Closes #77 ) [6.0.0] 2020-08-03 Upgrade to CodeNarc v1.6.1 Update list of rules Use new CodeNarc JSON console Output instead of temporary XML files Call CodeNarc to get its version instead of using npm-groovy-lint hardcoded value Upgrade to GMetrics v1.1 Upgrade to Groovy v3.0.5 Add anonymous usage stats on types of errors found and fixed [5.8.0] 2020-08-01 Fix & enhance anonymous statistics [5.7.0] 2020-07-23 (#62) Check parse error in all files when called via CLI . Closes #69 [5.6.1] 2020-07-20 Fixes: (#62) using a codenarc ruleset file seems to fail / groovylintrc is not codenarc compatible [5.6.0] 2020-07-20 (#68) Generate a ready-to-use docker image when publishing new npm-groovy-lint version (by Dave Gallant ) [5.5.1] 2020-07-15 Fixes (#64) The contents of a string gets formatted unexpectedly [5.5.0] 2020-07-09 Allow to override java executable and options (#54) [5.4.2] 2020-07-09 Use os.EOL (#65) solving (#63) --fix for indentation adds CRLF line-endings to all files it touches [5.4.1] 2020-07-01 CodeNarcServer listens to localhost only (#59) solving (#56) Replace @analytics/segment with @amplitude/node for anonymous stats [5.3.0] 2020-06-29 New option --failon , replacing --failonerror , --failonwarning and --failoninfo . It can take error, warning or info values (default: none). Previous options remain working but are deprecated and will be removed in a future major version Update help for --fixrules option [5.1.0] 2020-06-04 Install Java 8 using node-jre in case java version found is higher than Java 11 (CodeNarc compatibility is Java 8 to 11) [5.0.3] 2020-05-30 Updated fix rules Indentation IndentationClosingBrace [5.0.2] 2020-05-27 Avoid to apply wrong fix in case of CodeNarc false positive New fix rules BlankLineBeforePackage Updated fix rules BracesForIfElse BracesForMethod BracesForTryCatchFinally ClassEndsWithBlankLine ClassStartsWithBlankLine MissingBlankLineAfterImports MissingBlankLineAfterPackage UnnecessaryGroovyImport UnusedImport [5.0.0] 2020-05-25 BIG BANG : Improve performances, compatibility, architecture and delivery Get rid of jDeploy dependency Use own java-caller.js for java commands Update CircleCI config to use npm link instead of jdeploy install Get rid of request dependency Use axios for promisified http calls [4.14.0] 2020-05-22 Send rule configuration to fix functions Add .gradle files in default linted files Fixes: Missing number of linted files returned in summary Try to call CodeNarcJava in case there is an error with CodeNarcServer call [4.13.0] 2020-05-20 Manage to send options for rules sent in rulesets : Ex: Indentation{\"spacesPerIndentLevel\":2,\"severity\":\"warning\"},UnnecessarySemicolon New parameter --rulesetsoverridetype : If list of rules sent in rulesets option, defines if they replace rules defined in .groovylintrc.json, or if they are appended [4.12.0] 2020-05-18 Improve performances and avoid Unknown command: node error by using childProcess.fork to call CodeNarcServer [4.11.1] 2020-05-16 Detect when crash is related to \"node\" or \"java\" command not found and return a human readable error message [4.11.0] 2020-05-13 Add CI , rule overrides and crashes in anonymous insights for debugging investigation When used as a module, never crash intentionally with throw , so when called by module, check linter.status and linter.error instead of try/catch 0: ok 1: expected error 2: unexpected error 9: if cancelled request [4.10.0] 2020-05-12 Update analytics to use analytics & @analytics-segment instead of insight . If you want to disable anonymous usage stats, you can still use --no-insight option. [4.9.0] 2020-05-10 Add anonymous usage statistics using insight , in order to make new improvements based on how users use this package. Note: Analytics obviously does not receive sensitive information like your code, as you can see in analytics.js . If you want to disable anonymous usage stats, use --no-insight option. [4.8.0] 2020-05-08 New fix rules AssignmentInConditional DuplicateImport ExplicitLinkedListInstantiation InsecureRandom UnnecessaryDefInVariableDeclaration UnnecessaryDotClass UnnecessaryFinalOnPrivateMethod UnnecessaryInstantiationToGetClass Updated fix rules BracesForForLoop: False positive triggering messy code after fixing UnnecessaryGString: Fix multiline replacements ( \"\"\" by ''' ) Fixes : Launch JVM with high memory ( -Xms256m -Xmx2048m ) to improve performances on big files Increase CodeNarcServ call timeout (+ Manage ETIMEOUT as result, not only ECONNREFUSED ) Utils Allow regex in range functions [4.7.0] 2020-05-06 New fix rules BracesForClass BracesForForLoop BracesForIfElse BracesForMethod BracesForTryCatchFinally ExplicitArrayListInstantiation MissingBlankLineAfterImports MissingBlankLineAfterPackage Updated fix rules UnnecessaryGString: Fix replacements containing \\n and \\r [4.6.0] 2020-05-01 New fix rules SpaceBeforeClosingBrace UnnecessaryDefInMethodDeclaration UnnecessaryPackageReference UnnecessaryParenthesesForMethodCallWithClosure Updated fix rules MisorderedStaticImports: Fix @Grapes killer fixing rule ElseBlockBrace :issue when instruction is on the same line than else [4.5.5] 2020-04-30 Fixes ignorepattern option not working #34 [4.5.2] 2020-04-29 Expose loadConfig() method to load rules when npm-groovy-lint is used as a library Fixes Missing temporary rulesets file missing Handle better CodeNarcServer concurrent calls [4.5.1] 2020-04-28 Fixes Take in account user overridden indentation space (and other rules) when using --format option #31 [4.5.0] 2020-04-24 Configuration updates ( #29 ): New default config \"recommended-jenkinsfile\". Use it with argument --config recommended-jenkinsfile Allow to directly target a config file name. Use it with argument --config /my/custom/path/.groovylintrc-custom-name.json Allow to send a string key that will be used to find config file --config custom-name Updated fix rules: IfStatementBraces ElseStatementBraces [4.4.1] 2020-04-16 Fixes: CodeNarcServer: Use cachedThreadPool instead of fixedThreadPool [4.4.0] 2020-04-16 Cancel a CodeNarc Lint when a similar CodeNarcServer request is received (allowing onType mode for language servers) [4.3.0] 2020-04-14 Allow to disable rules using comments in source in eslint style [4.2.0] 2020-04-13 New option --parse : Capability to parse source code and return compilation errors New fix rules (thanks CatSue !): SpaceAfterSemicolon SpaceAfterWhile [4.1.0] 2020-04-12 Upgrade to Groovy 3.0.3 Automatic generation of fixable rules list for README Refactor CodeNarcServer.groovy [4.0.0] 2020-04-09 Fix issue affecting performances on Linux and MacOs [3.3.0] 2020-04-06 When formatting, always run some custom npm-groovy-lint fix rules not corresponding to CodeNarc violations Return CodeNarc and Groovy versions when --version options is called Fixes Lost indentation when applying some fix rules Updated fix rules: IndentationClosingBraces IndentationComments SpaceAfterCatch SpaceAfterIf New fix rules: ClassEndsWithBlankLine ClassStartsWithNewLine SpaceAfterFor SpaceAfterSwitch [3.2.4] 2020-04-03 Error message in postinstall if env Node.js is lower than the minimal required (12) [3.2.3] 2020-04-02 When If or Else brackets are fixed,trigger another rule lint & fix only with Indentation rules so CodeNarc recalculate them correctly New option nolintafter : When format or fix is called, a new lint is performed after the fixes to update the error list. If you just want the updated source code and do not care about the error logs, use this parameter to improve performances Fixes Manage correctly options failonerror , failonwarning and failoninfo npm-groovy-lint -version now returns version from package.json Mocha tests updates: Add stats on calls to CodeNarc ( globalThis.codeNarcCallsCounter and globalThis.codeNarcCalls , activated if globalThis.codeNarcCallsCounter is set to 0 before calling NmpGroovyLint) Factorize test classes common code in module helper/common.js Use a smaller groovy file for test classes when not impacting the tests quality [3.2.2] 2020-03-31 New option returnrules if you want to return rules descriptions and documentation url in results Use npm ci instead of npm install in CircleCI build [3.2.1] 2020-03-29 Return rules descriptions in results New option nolintafter : do not lint again a format or a fix, as the client prefers to request it Fixes Issue #13 : False positive error ClassNameSameAsFileName Sometimes returning wrong .groovylint.json config file [3.2.0] 2020-03-26 New option \"--format\", allowing to reformat source code (using .groovylintrc-format.json) Update default recommended rules [3.1.3] 2020-03-22 README: Link to Visual Studio Code Groovy Lint extension [3.1.2] 2020-03-22 New Fix rules: BlockEndsWithBlankLine BlockStartsWithBlankLine MisorderedStaticImports SpaceAfterIf Fix: Update correctly the lineNb & ranges of next errors after an error has been fixed Do not return rules tests if call is not from a test file Fix rules: ElseBlockBraces IfStatementBraces SpaceAroundOperator UnusedImport [3.1.1] 2020-03-20 New Fix rules: BlockEndsWithBlankLine BlockStartsWithBlankLine MisorderedStaticImports SpaceAfterIf Updated Fix rules: SpaceAroundOperator [3.1.0] 2020-03-18 Test suites: Improve reliability & logs for rule fixes tests (detected numerous bugs, now corrected) Send computed range to fix functions Updated Fix rules: ClosingBraceNotAlone ElseBlockBraces IfStatementBraces NoTabCharacter SpaceAfterComma SystemExit TrailingWhitespace UnnecessaryGroovyImport UnusedImport [3.0.1] 2020-03-17 Add new test suites: errors.test.js and miscellaneous.test.js Use JSON as default GroovyLint configuration file type Order of fixable rules must be defined in groovy-lint-rules.js Do not load rules test data except during tests Do not lint again after a call to fixErrors on an existing NpmGroovyLint instance (except if lintAgainAfterFix : true is sent in options) Fix: Deletion of temp RuleSite file Fix: UnnecessarySemiColon rule Fix: ClosingBraceNotAlone rule [3.0.0] 2020-03-15 Local microservice \"CodeNarcServer\" called via Http by npm-groovy-lint, to avoid loading all groovy/java classes at each lint request. This microservice auto-kills itself after one hour idle. Capability to define RuleSets in argument or js/json/yml config file formats instead of groovy/xml RuleSet format Test classes for rules fix (before / after fix defined in rule definitions) Add debug logs (use it by setting DEBUG env variable , ex: DEBUG=npm-groovy-lint npm-groovy-lint args... ) Update lines and ranges of other errors after a fix updated the number of lines Generate automatically .groovylintrc-all.js during build Split rules definition into files instead of all in a huge single file Reorganize groovy-lint.js code, using codenarc-factory.js and codenarc-caller.js New lib utils.js that can be used by rules definition Fix: Crash when there was no error found in a file Fix: Remove Promise error display in log after launching CodeNarcServer Fix: Add more options exclusivity arguments rules Removed \"Groovy\", \"Jenkinsfile\" and \"All\" identifiers for --rulesets arguments. Please now use .groovylintrc.js configuration [2.2.0] 2020-02-28 Capability to call NpmGroovyLint with options as object, not only command line arguments New option \"source\", allowing to call NpmGroovyLint with the groovy code as a string , not only path & files pattern Run lint again after fix all errors, to get updated lintResult Add gitattributes to normalized line-endings (thanks docwhat ) API: fix only some errors after an initial lint (better performances) Return error range in files for some rules in JSON or API result (will be useful for the VsCode extension currently developed) Define range function for existing rules, new fixable rules [2.0.1] - 2020-02-21 Capability to fix errors ConsecutiveBlankLines Indentation (IfStatementBraces and ElseIfStatementBraces must be manually fixed to have correct indentation) IndentationComments (custom npm-groovy-rule triggered by Indentation rule) IndentationClosingBrace (custom npm-groovy-rule triggered by Indentation rule) NoTabCharacter SpaceAfterCatch SpaceAfterOpeningBrace SpaceAroundOperator SpaceAfterComma SpaceBeforeOpeningBrace UnnecessaryDefInFieldDeclaration UnnecessaryGString UnnecessaryPublicModifier UnnecessarySemicolon TrailingWhitespace Log formatting with severity colors and summary table Default recommended RuleSets for Groovy and Jenkins Progress bar in console More code coverage with test campaigns New Capability to call NpmGroovyLint from another package (VsCode extension development in progress ^^) Refactored command line arguments ( simpler, but different from CodeNarc ones : retro-compatibility with CodeNarc arguments assured if you add --codenarcargs) Upgrade to CodeNarc v1.5 Upgrade to Groovy v3.0.1 Refactored documentation with detailed arguments description & examples Before I wasn't serious enough to keep a changelog, sorry !","title":"Changelog"},{"location":"CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"CHANGELOG/#unreleased","text":"","title":"UNRELEASED"},{"location":"CHANGELOG/#920-2021-12-23","text":"Upgrade log4j dependencies because of (another) security issue (#196)","title":"[9.2.0] 2021-12-23"},{"location":"CHANGELOG/#910-2021-12-14","text":"Upgrade log4j dependencies because of security issue (#194)","title":"[9.1.0] 2021-12-14"},{"location":"CHANGELOG/#900-2021-09-30","text":"Upgrade to CodeNarc v2.2.0 Upgrade to Groovy v3.0.9 Reorganize sources test folder Use java from 8 to 14 (install it if a later version is found) Add timeouts in CI jobs Add colors in error logs","title":"[9.0.0] 2021-09-30"},{"location":"CHANGELOG/#820-2021-06-11","text":"Upgrade dependencies advised by dependabot Fix Mega-Linter errors found","title":"[8.2.0] 2021-06-11"},{"location":"CHANGELOG/#810-2020-12-14","text":"Exclude UnnecessaryGetter , FactoryMethodName , MethodReturnTypeRequired , and GStringExpressionWithinString in recommended-jenkinsfile ( #140 ) ( Felipe Santos )","title":"[8.1.0] 2020-12-14"},{"location":"CHANGELOG/#802-2020-11-26","text":"Fix documentation about --verbose and --version options Use GitHub action to deploy to NPM","title":"[8.0.2] 2020-11-26"},{"location":"CHANGELOG/#801-2020-11-19","text":"Add a test case where variable includes if in its name for fix of rule SpaceAfterIf ( Behl\u00fcl U\u00e7ar )","title":"[8.0.1] 2020-11-19"},{"location":"CHANGELOG/#800-2020-11-15","text":"Upgrade to CodeNarc 2.0.0 Upgrade jars Adapt Indentation rule to new behaviour Use codenarc --ruleset argument instead of temp ruleset file Replace super-linter by Mega-Linter Fixes (#127) Formatting breaks code, converting else if into elseif in some cases Apply formatting rules also for --fix mode Fix Markdown dead links CI Migrate from CircleCI to GitHub Actions: now tests are on Linux, Windows & MacOs Activate spelling linter of Mega-Linter (+ .cspell.json file) Add test cases for format and fix using CLI","title":"[8.0.0] 2020-11-15"},{"location":"CHANGELOG/#762-2020-09-09","text":"Disable TrailingComma rule by default until crash is solved in CodeNarc ( #75@vscode-groovy-lint )","title":"[7.6.2] 2020-09-09"},{"location":"CHANGELOG/#760-2020-09-08","text":"Add GitHub Action GitHub Super-Linter to the repository Update Dockerfile to pass Docker lint rules","title":"[7.6.0] 2020-09-08"},{"location":"CHANGELOG/#755-2020-09-05","text":"Upgrade java-caller to v2.2.3 Fix Java 8 detection ( #101 )","title":"[7.5.5] 2020-09-05"},{"location":"CHANGELOG/#754-2020-09-04","text":"Update frameworks detection","title":"[7.5.4] 2020-09-04"},{"location":"CHANGELOG/#751-2020-09-02","text":"Fix (#96) --fix adds redundant space into ${VARIABLE} (SpaceBeforeOpeningBrace fix rule error) Fix grails framework detection Fix Groovy parsing parsing when multiple files Add .gvy and .nf in default browsed files extensions","title":"[7.5.1] 2020-09-02"},{"location":"CHANGELOG/#750-2020-09-02","text":"Add anonymous framework usage stats for Groovy core Team","title":"[7.5.0] 2020-09-02"},{"location":"CHANGELOG/#743-2020-08-29","text":"Upgrade java-caller to v2.2.0 Fix CLASSPATH on windows in case there are spaces in paths","title":"[7.4.3] 2020-08-29"},{"location":"CHANGELOG/#742-2020-08-26","text":"Fix (#90) When log level is specified number of linted files appear to be off","title":"[7.4.2] 2020-08-26"},{"location":"CHANGELOG/#741-2020-08-23","text":"(#88) Fix Docker image to allow to use extra parameters (by Howard Lo )","title":"[7.4.1] 2020-08-23"},{"location":"CHANGELOG/#740-2020-08-17","text":"(#87) update to openjdk 11 in official Docker image (by Pawel Kopka )","title":"[7.4.0] 2020-08-17"},{"location":"CHANGELOG/#731-2020-08-16","text":"Add number of lines & reorganize anonymous statistics Fix error type counters in anonymous statistics","title":"[7.3.1] 2020-08-16"},{"location":"CHANGELOG/#730-2020-08-15","text":"Allow to link to CodeNarc RuleSet files from .groovylintrc.json , using property \"codenarcRulesets\" . Warning: doing so means that all other properties of config file will be ignored.","title":"[7.3.0] 2020-08-15"},{"location":"CHANGELOG/#711-2020-08-11","text":"Upgrade java-caller to v2.0.0","title":"[7.1.1] 2020-08-11"},{"location":"CHANGELOG/#710-2020-08-10","text":"Externalize JavaCaller class into a separate package java-caller and use it","title":"[7.1.0] 2020-08-10"},{"location":"CHANGELOG/#700-2020-08-07","text":"New default recommended rules (activate/deactivate/change severity) Allow to call --config recommended-jenkinsfile to use delivered .groovylintrc-recommended-jenkinsfile.json","title":"[7.0.0] 2020-08-07"},{"location":"CHANGELOG/#611-2020-08-04","text":"Fix SpaceAfterComma auto-fixing rule","title":"[6.1.1] 2020-08-04"},{"location":"CHANGELOG/#610-2020-08-04","text":"Java 14 compatibility (Closes #77 )","title":"[6.1.0] 2020-08-04"},{"location":"CHANGELOG/#600-2020-08-03","text":"Upgrade to CodeNarc v1.6.1 Update list of rules Use new CodeNarc JSON console Output instead of temporary XML files Call CodeNarc to get its version instead of using npm-groovy-lint hardcoded value Upgrade to GMetrics v1.1 Upgrade to Groovy v3.0.5 Add anonymous usage stats on types of errors found and fixed","title":"[6.0.0] 2020-08-03"},{"location":"CHANGELOG/#580-2020-08-01","text":"Fix & enhance anonymous statistics","title":"[5.8.0] 2020-08-01"},{"location":"CHANGELOG/#570-2020-07-23","text":"(#62) Check parse error in all files when called via CLI . Closes #69","title":"[5.7.0] 2020-07-23"},{"location":"CHANGELOG/#561-2020-07-20","text":"Fixes: (#62) using a codenarc ruleset file seems to fail / groovylintrc is not codenarc compatible","title":"[5.6.1] 2020-07-20"},{"location":"CHANGELOG/#560-2020-07-20","text":"(#68) Generate a ready-to-use docker image when publishing new npm-groovy-lint version (by Dave Gallant )","title":"[5.6.0] 2020-07-20"},{"location":"CHANGELOG/#551-2020-07-15","text":"Fixes (#64) The contents of a string gets formatted unexpectedly","title":"[5.5.1] 2020-07-15"},{"location":"CHANGELOG/#550-2020-07-09","text":"Allow to override java executable and options (#54)","title":"[5.5.0] 2020-07-09"},{"location":"CHANGELOG/#542-2020-07-09","text":"Use os.EOL (#65) solving (#63) --fix for indentation adds CRLF line-endings to all files it touches","title":"[5.4.2] 2020-07-09"},{"location":"CHANGELOG/#541-2020-07-01","text":"CodeNarcServer listens to localhost only (#59) solving (#56) Replace @analytics/segment with @amplitude/node for anonymous stats","title":"[5.4.1] 2020-07-01"},{"location":"CHANGELOG/#530-2020-06-29","text":"New option --failon , replacing --failonerror , --failonwarning and --failoninfo . It can take error, warning or info values (default: none). Previous options remain working but are deprecated and will be removed in a future major version Update help for --fixrules option","title":"[5.3.0] 2020-06-29"},{"location":"CHANGELOG/#510-2020-06-04","text":"Install Java 8 using node-jre in case java version found is higher than Java 11 (CodeNarc compatibility is Java 8 to 11)","title":"[5.1.0] 2020-06-04"},{"location":"CHANGELOG/#503-2020-05-30","text":"Updated fix rules Indentation IndentationClosingBrace","title":"[5.0.3] 2020-05-30"},{"location":"CHANGELOG/#502-2020-05-27","text":"Avoid to apply wrong fix in case of CodeNarc false positive New fix rules BlankLineBeforePackage Updated fix rules BracesForIfElse BracesForMethod BracesForTryCatchFinally ClassEndsWithBlankLine ClassStartsWithBlankLine MissingBlankLineAfterImports MissingBlankLineAfterPackage UnnecessaryGroovyImport UnusedImport","title":"[5.0.2] 2020-05-27"},{"location":"CHANGELOG/#500-2020-05-25","text":"BIG BANG : Improve performances, compatibility, architecture and delivery Get rid of jDeploy dependency Use own java-caller.js for java commands Update CircleCI config to use npm link instead of jdeploy install Get rid of request dependency Use axios for promisified http calls","title":"[5.0.0] 2020-05-25"},{"location":"CHANGELOG/#4140-2020-05-22","text":"Send rule configuration to fix functions Add .gradle files in default linted files Fixes: Missing number of linted files returned in summary Try to call CodeNarcJava in case there is an error with CodeNarcServer call","title":"[4.14.0] 2020-05-22"},{"location":"CHANGELOG/#4130-2020-05-20","text":"Manage to send options for rules sent in rulesets : Ex: Indentation{\"spacesPerIndentLevel\":2,\"severity\":\"warning\"},UnnecessarySemicolon New parameter --rulesetsoverridetype : If list of rules sent in rulesets option, defines if they replace rules defined in .groovylintrc.json, or if they are appended","title":"[4.13.0] 2020-05-20"},{"location":"CHANGELOG/#4120-2020-05-18","text":"Improve performances and avoid Unknown command: node error by using childProcess.fork to call CodeNarcServer","title":"[4.12.0] 2020-05-18"},{"location":"CHANGELOG/#4111-2020-05-16","text":"Detect when crash is related to \"node\" or \"java\" command not found and return a human readable error message","title":"[4.11.1] 2020-05-16"},{"location":"CHANGELOG/#4110-2020-05-13","text":"Add CI , rule overrides and crashes in anonymous insights for debugging investigation When used as a module, never crash intentionally with throw , so when called by module, check linter.status and linter.error instead of try/catch 0: ok 1: expected error 2: unexpected error 9: if cancelled request","title":"[4.11.0] 2020-05-13"},{"location":"CHANGELOG/#4100-2020-05-12","text":"Update analytics to use analytics & @analytics-segment instead of insight . If you want to disable anonymous usage stats, you can still use --no-insight option.","title":"[4.10.0] 2020-05-12"},{"location":"CHANGELOG/#490-2020-05-10","text":"Add anonymous usage statistics using insight , in order to make new improvements based on how users use this package. Note: Analytics obviously does not receive sensitive information like your code, as you can see in analytics.js . If you want to disable anonymous usage stats, use --no-insight option.","title":"[4.9.0] 2020-05-10"},{"location":"CHANGELOG/#480-2020-05-08","text":"New fix rules AssignmentInConditional DuplicateImport ExplicitLinkedListInstantiation InsecureRandom UnnecessaryDefInVariableDeclaration UnnecessaryDotClass UnnecessaryFinalOnPrivateMethod UnnecessaryInstantiationToGetClass Updated fix rules BracesForForLoop: False positive triggering messy code after fixing UnnecessaryGString: Fix multiline replacements ( \"\"\" by ''' ) Fixes : Launch JVM with high memory ( -Xms256m -Xmx2048m ) to improve performances on big files Increase CodeNarcServ call timeout (+ Manage ETIMEOUT as result, not only ECONNREFUSED ) Utils Allow regex in range functions","title":"[4.8.0] 2020-05-08"},{"location":"CHANGELOG/#470-2020-05-06","text":"New fix rules BracesForClass BracesForForLoop BracesForIfElse BracesForMethod BracesForTryCatchFinally ExplicitArrayListInstantiation MissingBlankLineAfterImports MissingBlankLineAfterPackage Updated fix rules UnnecessaryGString: Fix replacements containing \\n and \\r","title":"[4.7.0] 2020-05-06"},{"location":"CHANGELOG/#460-2020-05-01","text":"New fix rules SpaceBeforeClosingBrace UnnecessaryDefInMethodDeclaration UnnecessaryPackageReference UnnecessaryParenthesesForMethodCallWithClosure Updated fix rules MisorderedStaticImports: Fix @Grapes killer fixing rule ElseBlockBrace :issue when instruction is on the same line than else","title":"[4.6.0] 2020-05-01"},{"location":"CHANGELOG/#455-2020-04-30","text":"Fixes ignorepattern option not working #34","title":"[4.5.5] 2020-04-30"},{"location":"CHANGELOG/#452-2020-04-29","text":"Expose loadConfig() method to load rules when npm-groovy-lint is used as a library Fixes Missing temporary rulesets file missing Handle better CodeNarcServer concurrent calls","title":"[4.5.2] 2020-04-29"},{"location":"CHANGELOG/#451-2020-04-28","text":"Fixes Take in account user overridden indentation space (and other rules) when using --format option #31","title":"[4.5.1] 2020-04-28"},{"location":"CHANGELOG/#450-2020-04-24","text":"Configuration updates ( #29 ): New default config \"recommended-jenkinsfile\". Use it with argument --config recommended-jenkinsfile Allow to directly target a config file name. Use it with argument --config /my/custom/path/.groovylintrc-custom-name.json Allow to send a string key that will be used to find config file --config custom-name Updated fix rules: IfStatementBraces ElseStatementBraces","title":"[4.5.0] 2020-04-24"},{"location":"CHANGELOG/#441-2020-04-16","text":"Fixes: CodeNarcServer: Use cachedThreadPool instead of fixedThreadPool","title":"[4.4.1] 2020-04-16"},{"location":"CHANGELOG/#440-2020-04-16","text":"Cancel a CodeNarc Lint when a similar CodeNarcServer request is received (allowing onType mode for language servers)","title":"[4.4.0] 2020-04-16"},{"location":"CHANGELOG/#430-2020-04-14","text":"Allow to disable rules using comments in source in eslint style","title":"[4.3.0] 2020-04-14"},{"location":"CHANGELOG/#420-2020-04-13","text":"New option --parse : Capability to parse source code and return compilation errors New fix rules (thanks CatSue !): SpaceAfterSemicolon SpaceAfterWhile","title":"[4.2.0] 2020-04-13"},{"location":"CHANGELOG/#410-2020-04-12","text":"Upgrade to Groovy 3.0.3 Automatic generation of fixable rules list for README Refactor CodeNarcServer.groovy","title":"[4.1.0] 2020-04-12"},{"location":"CHANGELOG/#400-2020-04-09","text":"Fix issue affecting performances on Linux and MacOs","title":"[4.0.0] 2020-04-09"},{"location":"CHANGELOG/#330-2020-04-06","text":"When formatting, always run some custom npm-groovy-lint fix rules not corresponding to CodeNarc violations Return CodeNarc and Groovy versions when --version options is called Fixes Lost indentation when applying some fix rules Updated fix rules: IndentationClosingBraces IndentationComments SpaceAfterCatch SpaceAfterIf New fix rules: ClassEndsWithBlankLine ClassStartsWithNewLine SpaceAfterFor SpaceAfterSwitch","title":"[3.3.0] 2020-04-06"},{"location":"CHANGELOG/#324-2020-04-03","text":"Error message in postinstall if env Node.js is lower than the minimal required (12)","title":"[3.2.4] 2020-04-03"},{"location":"CHANGELOG/#323-2020-04-02","text":"When If or Else brackets are fixed,trigger another rule lint & fix only with Indentation rules so CodeNarc recalculate them correctly New option nolintafter : When format or fix is called, a new lint is performed after the fixes to update the error list. If you just want the updated source code and do not care about the error logs, use this parameter to improve performances Fixes Manage correctly options failonerror , failonwarning and failoninfo npm-groovy-lint -version now returns version from package.json Mocha tests updates: Add stats on calls to CodeNarc ( globalThis.codeNarcCallsCounter and globalThis.codeNarcCalls , activated if globalThis.codeNarcCallsCounter is set to 0 before calling NmpGroovyLint) Factorize test classes common code in module helper/common.js Use a smaller groovy file for test classes when not impacting the tests quality","title":"[3.2.3] 2020-04-02"},{"location":"CHANGELOG/#322-2020-03-31","text":"New option returnrules if you want to return rules descriptions and documentation url in results Use npm ci instead of npm install in CircleCI build","title":"[3.2.2] 2020-03-31"},{"location":"CHANGELOG/#321-2020-03-29","text":"Return rules descriptions in results New option nolintafter : do not lint again a format or a fix, as the client prefers to request it Fixes Issue #13 : False positive error ClassNameSameAsFileName Sometimes returning wrong .groovylint.json config file","title":"[3.2.1] 2020-03-29"},{"location":"CHANGELOG/#320-2020-03-26","text":"New option \"--format\", allowing to reformat source code (using .groovylintrc-format.json) Update default recommended rules","title":"[3.2.0] 2020-03-26"},{"location":"CHANGELOG/#313-2020-03-22","text":"README: Link to Visual Studio Code Groovy Lint extension","title":"[3.1.3] 2020-03-22"},{"location":"CHANGELOG/#312-2020-03-22","text":"New Fix rules: BlockEndsWithBlankLine BlockStartsWithBlankLine MisorderedStaticImports SpaceAfterIf Fix: Update correctly the lineNb & ranges of next errors after an error has been fixed Do not return rules tests if call is not from a test file Fix rules: ElseBlockBraces IfStatementBraces SpaceAroundOperator UnusedImport","title":"[3.1.2] 2020-03-22"},{"location":"CHANGELOG/#311-2020-03-20","text":"New Fix rules: BlockEndsWithBlankLine BlockStartsWithBlankLine MisorderedStaticImports SpaceAfterIf Updated Fix rules: SpaceAroundOperator","title":"[3.1.1] 2020-03-20"},{"location":"CHANGELOG/#310-2020-03-18","text":"Test suites: Improve reliability & logs for rule fixes tests (detected numerous bugs, now corrected) Send computed range to fix functions Updated Fix rules: ClosingBraceNotAlone ElseBlockBraces IfStatementBraces NoTabCharacter SpaceAfterComma SystemExit TrailingWhitespace UnnecessaryGroovyImport UnusedImport","title":"[3.1.0] 2020-03-18"},{"location":"CHANGELOG/#301-2020-03-17","text":"Add new test suites: errors.test.js and miscellaneous.test.js Use JSON as default GroovyLint configuration file type Order of fixable rules must be defined in groovy-lint-rules.js Do not load rules test data except during tests Do not lint again after a call to fixErrors on an existing NpmGroovyLint instance (except if lintAgainAfterFix : true is sent in options) Fix: Deletion of temp RuleSite file Fix: UnnecessarySemiColon rule Fix: ClosingBraceNotAlone rule","title":"[3.0.1] 2020-03-17"},{"location":"CHANGELOG/#300-2020-03-15","text":"Local microservice \"CodeNarcServer\" called via Http by npm-groovy-lint, to avoid loading all groovy/java classes at each lint request. This microservice auto-kills itself after one hour idle. Capability to define RuleSets in argument or js/json/yml config file formats instead of groovy/xml RuleSet format Test classes for rules fix (before / after fix defined in rule definitions) Add debug logs (use it by setting DEBUG env variable , ex: DEBUG=npm-groovy-lint npm-groovy-lint args... ) Update lines and ranges of other errors after a fix updated the number of lines Generate automatically .groovylintrc-all.js during build Split rules definition into files instead of all in a huge single file Reorganize groovy-lint.js code, using codenarc-factory.js and codenarc-caller.js New lib utils.js that can be used by rules definition Fix: Crash when there was no error found in a file Fix: Remove Promise error display in log after launching CodeNarcServer Fix: Add more options exclusivity arguments rules Removed \"Groovy\", \"Jenkinsfile\" and \"All\" identifiers for --rulesets arguments. Please now use .groovylintrc.js configuration","title":"[3.0.0] 2020-03-15"},{"location":"CHANGELOG/#220-2020-02-28","text":"Capability to call NpmGroovyLint with options as object, not only command line arguments New option \"source\", allowing to call NpmGroovyLint with the groovy code as a string , not only path & files pattern Run lint again after fix all errors, to get updated lintResult Add gitattributes to normalized line-endings (thanks docwhat ) API: fix only some errors after an initial lint (better performances) Return error range in files for some rules in JSON or API result (will be useful for the VsCode extension currently developed) Define range function for existing rules, new fixable rules","title":"[2.2.0] 2020-02-28"},{"location":"CHANGELOG/#201-2020-02-21","text":"Capability to fix errors ConsecutiveBlankLines Indentation (IfStatementBraces and ElseIfStatementBraces must be manually fixed to have correct indentation) IndentationComments (custom npm-groovy-rule triggered by Indentation rule) IndentationClosingBrace (custom npm-groovy-rule triggered by Indentation rule) NoTabCharacter SpaceAfterCatch SpaceAfterOpeningBrace SpaceAroundOperator SpaceAfterComma SpaceBeforeOpeningBrace UnnecessaryDefInFieldDeclaration UnnecessaryGString UnnecessaryPublicModifier UnnecessarySemicolon TrailingWhitespace Log formatting with severity colors and summary table Default recommended RuleSets for Groovy and Jenkins Progress bar in console More code coverage with test campaigns New Capability to call NpmGroovyLint from another package (VsCode extension development in progress ^^) Refactored command line arguments ( simpler, but different from CodeNarc ones : retro-compatibility with CodeNarc arguments assured if you add --codenarcargs) Upgrade to CodeNarc v1.5 Upgrade to Groovy v3.0.1 Refactored documentation with detailed arguments description & examples","title":"[2.0.1] - 2020-02-21"},{"location":"CHANGELOG/#before","text":"I wasn't serious enough to keep a changelog, sorry !","title":"Before"}]}